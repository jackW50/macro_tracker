<%= content_tag :h1, current_user.username %>

<!-- want this to just display the meals for the user for the current day -->
<h3>Todays Meals</h3>

<%= render 'meals/meals_list', meals: @meals %>

<%= content_tag :div do %>
  <%= link_to "Create a New Meal", new_meal_path, id: "new-meal-form-link" %>
<% end %>
<div id="new-meal-form"></div>

<%= content_tag :div do %>
  <%= link_to "See All Meals", meals_path(@meal), id: "all-meals" %>
  <div id="show-meals"></div>
<% end %>

<h5 id="todays_meals_show_macro"> Macronutrient Tracker </h5>
<table class="pure-table">
    <thead>
        <tr>
            <th>Category</th>
            <th>Grams</th>
            <th>Percentage of Calories</th>
        </tr>
    </thead>
    <tbody>
    <% @macronutrients.each.with_index(1) do |macronutrient, i| %>
      <%= tr_class(i) do %>
        <%= content_tag :td, macronutrient.category.upcase %>
        <%= content_tag :td, Meal.todays_macronutrient_total(current_user, macronutrient) %>
        <%= content_tag :td, Meal.todays_percent_calories_of_macro(current_user, macronutrient) %>
      <% end %>
    <% end %>
  </tbody>
</table>

<script type="text/javascript" charset="utf-8">
  console.log('hello on user profile.');
  $('.see-creator').remove();
  $(document).on('turbolinks:load', function() {
    console.log('turbolinks loads');

    function seeMealsListener() {
      $('#all-meals').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        const seeMealsLink = $('#all-meals').replaceWith('<a href="#" id="hide-meals">hide meals</a>')

        if ($('body').data('meals') === undefined) {
          $.getJSON('/meals', function(data) {
            console.log('got data back for meals', data);
            const meals = data.map( e => {
              return new Meal(e.id, e.time, e.meal_compositions);
            })
            console.log(meals);

            $('body').data('meals', meals);

            let counter = 0;
            meals.forEach( meal => {
              counter++
              $('#show-meals').append(meal.mealListItem());
              if (counter === meals.length) {
                const links = '#show-meals a'
                seeFoodsLinkListener(links);
              }
            })
          });
          hideMealsListener(seeMealsLink);
        } else {
          $('#show-meals').show();
          hideMealsListener(seeMealsLink);
        }
      });
    }

    function hideMealsListener(mealsLink) {
      $('#hide-meals').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        $('#show-meals').hide();
        $('#hide-meals').replaceWith(mealsLink)
        $('#all-meals').off()
        seeMealsListener();
      })
    }

     function seeFoodsLinkListener(link) {
       $(link).on('click', function(e) {
         e.preventDefault();
         e.stopPropagation();
         console.log('I just clicked to see the foods for this meal', this.attributes.data.value);
         const mealId = this.attributes.data.value;
         let seeFoodsLink = $(this).replaceWith('<a href="#" id="hide-foods-' + mealId + '" data="' + mealId + '">hide foods</a>');

         if ($('body').data('foodList' + mealId) === undefined) {
           const meal = $('body').data('meals').find( e => {
             return e.id === parseInt(mealId);
           })
           $('body').data('foodList' + mealId, $('ul#' + mealId))
           meal.foods().forEach( e => {
             return $('ul#' + mealId).append(e.foodLink());
           })
           hideFoodsListener(seeFoodsLink)
         } else {
           $('body').data('foodList' + mealId).show("slow");
           hideFoodsListener(seeFoodsLink);
         }
       });
     }

    function hideFoodsListener(seeFoodsLink) {

      const mealId = seeFoodsLink[0].attributes.data.value;
      $('#hide-foods-' + mealId).on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();

        let foodList = $('ul#' + mealId)

        foodList.hide("slow")
        $(this).replaceWith(seeFoodsLink)
        seeFoodsLinkListener('#see-foods-' + mealId);
      })
    }

    function createMealLinkListener() {
      $('#new-meal-form-link').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        $('#new-meal-form-link').hide();

        if ($('body').data('new-meal-form') === undefined) {
          console.log('no form saved')
          $.get('/foods', function(data) {
            console.log(data);
            $('body').data('all-foods', data);
            const newMealForm = HandlebarsTemplates['new_meal_form']({
              foods: data
            })
            $('#new-meal-form').prepend(newMealForm);
            $('body').data('new-meal-form', newMealForm);
            hideFormListener();
            newMealFormListener();
            createNewFoodFormLinkListener();
            addFoodFormLinkListener();
          })
        } else {
          $('#new-meal-form').prepend($('body').data('new-meal-form'));
          hideFormListener();
          newMealFormListener();
          createNewFoodFormLinkListener();
          addFoodFormLinkListener();
        }
      })
    }

    function newMealFormListener() {
      $('#meal-form').on('submit', function(e) {
        e.preventDefault();
        e.stopPropagation();
        let values = $(this).serialize();

        $.ajax({
          type: "POST",
          url: "/meals",
          data: values,
          success: success,
          dataType: "json"
        });

        function success(data) {
          console.log("I created a new meal", data);

          if (data.meal["todays_meal?"]) {
            const meal = new Meal(data.meal.id, data.meal.time, data.meal.meal_compositions);
            const macronutrientTable = new MacronutrientTable(data.meta.table_data.carbohydrate, data.meta.table_data.percent_calories_of_carbohydrate,
            data.meta.table_data.protein, data.meta.table_data.percent_calories_of_protein, data.meta.table_data.fat,
            data.meta.table_data.percent_calories_of_fat);

            meal.calories = data.meal.calories;
            $("#todays-meal-list").append(meal.liLink())
            macronutrientTable.updateTable();
            $('#new-meal-form').empty();
            $('#new-meal-form-link').show();
            $('#new-meal-form-link').off();
            createMealLinkListener();
          } else {
            $('#new-meal-form').empty();
            $('#new-meal-form-link').show();
            $('#new-meal-form-link').off();
            createMealLinkListener();
          }
        }
      });
    }

    function hideFormListener() {
      $('#hide-link-form').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('link hides form');
        $('#new-meal-form-link').show();
        $('#new-meal-form').empty();
        $('#new-meal-form-link').off();
        createMealLinkListener();
      })
    }

    function createNewFoodFormLinkListener() {
      $('#create-new-food-form-link').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('In the new food form click');

        const newFoodForm = HandlebarsTemplates['new_meal_food'];
        $('#add-new-food-form').prepend(newFoodForm);
      });
    }

    function addFoodFormLinkListener() {
      $('#add-food-form-link').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('In the add food form click');
        $.get('/foods', function(data) {
          console.log(data)
          const foods = data;
          const addFoodForm = HandlebarsTemplates['add_meal_food']({
            foods: foods
          })
          $('#add-add-food-form').prepend(addFoodForm);
        })
      });
    }

    //show meals when i hit see all meals
      //each meal will have a link attached that will show us the foods for that particular meal.
    seeMealsListener();
    //will show new meal form with links to add foods or create foods links
    //Upon submission will create a meal and display it if it is a meal for today
    //Will update table data if it is a meal for today
    //when submitted the form will retract
    createMealLinkListener();

  })
</script>
