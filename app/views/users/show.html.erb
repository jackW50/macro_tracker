<%= content_tag :h1, current_user.username %>

<!-- want this to just display the meals for the user for the current day -->
<h3>Todays Meals</h3>

<%= render 'meals/meals_list', meals: @meals %>

<%= content_tag :div do %>
  <%= link_to "Create a New Meal", new_meal_path, id: "new-meal-form-link" %>
<% end %>
<div id="new-meal-form"></div>

<%= content_tag :div do %>
  <%= link_to "See All Meals", meals_path(@meal), id: "all-meals" %>
  <div id="show-meals"></div>
<% end %>

<h5 id="todays_meals_show_macro"> Macronutrient Tracker </h5>
<table class="pure-table">
    <thead>
        <tr>
            <th>Category</th>
            <th>Grams</th>
            <th>Percentage of Calories</th>
        </tr>
    </thead>
    <tbody>
    <% @macronutrients.each.with_index(1) do |macronutrient, i| %>
      <%= tr_class(i) do %>
        <%= content_tag :td, macronutrient.category.upcase %>
        <%= content_tag :td, Meal.todays_macronutrient_total(current_user, macronutrient) %>
        <%= content_tag :td, Meal.todays_percent_calories_of_macro(current_user, macronutrient) %>
      <% end %>
    <% end %>
  </tbody>
</table>

<script type="text/javascript" charset="utf-8">
  console.log('hello on user profile.');
  $(document).on('turbolinks:load', function() {
    console.log('turbolinks loads');

    function seeMealsListener() {
      $('#all-meals').on('click', function(e) {
        e.preventDefault();
        if ($('body').data('meals') === undefined) {
          $.getJSON('/meals', function(data) {
            console.log('got data back for meals', data);
            const meals = data.map( e => {
              return new Meal(e.id, e.time, e.meal_compositions);
            })
            console.log(meals);

            $('body').data('meals', meals);
            meals.forEach( meal => {
              $('#show-meals').append(meal.mealListItem());
            })
          });
        } else {
          $('#show-meals').show();
        }

        //hide see meals link and show a hide meals link or replace the link with hide meals
        const seeMealsLink = $('#all-meals').replaceWith('<a href="#" id="hide-meals">hide meals</a>')

        $('#hide-meals').on('click', function(e) {
          e.preventDefault();
          $('#show-meals').hide();
          $('#hide-meals').replaceWith(seeMealsLink)
          seeMealsListener();
        })

        $('#show-meals a').on('click', function(e) {
          e.preventDefault();
          console.log('I just clicked to see the foods for this meal', this.attributes.data.value);
          const mealId = this.attributes.data.value;
          const meal = $('body').data('meals').find( e => {
            return e.id === parseInt(mealId);
          })
          meal.foods().forEach( e => {
            return $('ul#' + mealId).append(e.foodLink())
          })

          const seeFoodsLink = $(this).replaceWith('<a href="#" id="hide-foods-' + mealId + '">hide foods</a>');
          let hideFoods;

          $('#hide-foods-' + mealId).on('click', function(e) {
            e.preventDefault();
            foodList = $('ul#' + mealId)
            foodList.hide("slow")
            hideFoods = $('#hide-foods-' + mealId).replaceWith(seeFoodsLink);
            seeFoodsListener(seeFoodsLink, foodList)
          })
        })
      })
    }

    function seeFoodsListener(link, foodList) {
      $(link).on('click', function(e) {
        e.preventDefault();
        console.log('I just clicked to see the foods for this link', link);
        const mealId = link[0].attributes.data.value;
        const meal = $('body').data('meals').find( e => {
          return e.id === parseInt(mealId);
        })
        foodList.show();

        const seeFoodsLink = $(link).replaceWith('<a href="#" id="hide-foods-' + mealId + '">hide foods</a>');
        let hideFoods;

        $('#hide-foods-' + mealId).on('click', function(e) {
          e.preventDefault();
          foodList = $('ul#' + mealId)
          foodList.hide("slow")
          hideFoods = $('#hide-foods-' + mealId).replaceWith(seeFoodsLink);
          seeFoodsListener(seeFoodsLink, foodList)
        })
      })
    }

    function createMealLinkListener() {
      $('#new-meal-form-link').on('click', function(e) {
        e.preventDefault();
        $('#new-meal-form-link').hide();

        if ($('body').data('new-meal-form') === undefined) {
          console.log('no form saved')
          $.get('/foods', function(data) {
            console.log(data);
            $('body').data('all-foods', data);
            const newMealForm = HandlebarsTemplates['new_meal_form']({
              foods: data
            })
            $('#new-meal-form').prepend(newMealForm);
            $('#new-meal-form').before('<a href="#" id="hide-new-meal-form">hide form</a>')
            $('body').data('new-meal-form', newMealForm);
            newMealFormListener();
          })
        }

      })
    }

    function newMealFormListener() {
      $('#meal-form').on('submit', function(event) {
        event.preventDefault();
        let values = $(this).serialize();

        $.ajax({
          type: "POST",
          url: "/meals",
          data: values,
          success: success,
          dataType: "json"
        });

        function success(data) {
          console.log("I created a new meal", data);
          //debugger
          if (data.meal["todays_meal?"]) {
            debugger
            const meal = new Meal(data.meal.id, data.meal.time, data.meal.meal_compositions);
            meal.calories = data.meal.calories;
            $("#todays-meal-list").append(meal.liLink())
          }
        }
      })
    }

    //show meals when i hit see all meals
      //each meal will have a link attached that will show us the foods for that particular meal.
    seeMealsListener();
    createMealLinkListener();

  })
</script>
